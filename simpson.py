# -*- coding: utf-8 -*-
"""intento simpson.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T0PqShX5t9s7EhsA5o7R1zgXs7ncG_Wb
"""

# -*- coding: utf-8 -*-
"""ya tiene suma riman.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13jdlRuTMSJqmaLlITXL-2X5L8VlSPh36
"""

import matplotlib.pyplot as plt
import numpy as np
import matplotlib.lines as lines

P=10
A=-10  
B=20            #P será el numero de la puntos en la partición, A el inicio del intervalo y B el final, asi mismo Yp corresponde a las imagenes de los elementos en la partición
Partition=[]  
Yp=[]    
Puntos=0
Length=(B-A)/P



def h(x):
  return np.sin(x)


Puntos=A
while Puntos < B:                       #Puntos es la variable que guarda cada elemento de la partición, primero se le asigna el valor de A y luego se le suma el largo hasta llegar al ultimo punto
   Partition= Partition+[Puntos]
   Puntos = Puntos + Length

Partition= Partition+[B]                 #Aparentemente el programa no es del todo exacto por tanto la suma no siempre da B, así que lo agregamos 

for i in Partition:                     #crea la lista Yp con las imagenes de cada elemento en Partition
  Yp=Yp+[h(i)]
#--------------------------------------------------------------------------Comienza suma de rieman izquierda-------------------------------------------------
a=0
Yv2=[]
Xv2=[]

for i in Partition:           #convierte una lista de valores en la partición en una lista util para graficar 
  a=a+1
  if a == 1:
    Xv2=Xv2 +[i]+[i]
    
  if a < P+1 and a>1:
    Xv2=Xv2 +[i]+[i]+[i]      
  if a== P+1:
    Xv2=Xv2 +[i]+[i]
a=0    
                      
for i in Yp:                    #Convierte la lsita de valores en Y en una lista util para graficar 
  a=a+1
  if a<P+1:
    Yv2= Yv2+[0]+[i]+[i]
Yv2= Yv2+[0]
a=0   
#plt.plot(Xv2 , Yv2, label="Rieman Der")



SumaIzquierda=0

for i in Partition:

  if i !=B:    
    q=h(i) * Length 
    SumaIzquierda = SumaIzquierda +q
q=0
print("suma Izquierda es igual a: ")
print(SumaIzquierda)


#------------------------------------------------------------------------Comienza suma de rieman Derecha------------------------------------------------------------  
a=0
Yv3=[]
Xv3=Xv2
m=0                      
for i in Yp:                    #Convierte la lsita de valores en Y en una lista util para graficar    
  a=a+1

  if a>1:   
    Yv3= Yv3+[0]+[i]+[i]
    
Yv3= Yv3+[0]
a=0   
#plt.plot(Xv2 , Yv3, label="Rieman Izq")

SumaDerecha=0
for i in Partition:
  if i!=A:
    q=h(i)*Length
    SumaDerecha= SumaDerecha + q

print("Suma derecha es igual a: ")
print(SumaDerecha)

#----------------------------------------------------------------------Comienza suma de rieman Punto medio--------------------------------------------------------
Xv4=[]
Yv4=[0]
b=0

for i in Partition:              #crea la lista de puntos medios y la guarda en Yv4p
  if b==0:
    a=i
    b=b+1
  else:
    Pm=(a+i)/2
    Xv4=Xv4+[Pm]
    a=i

for i in Xv4:
  Yv4=Yv4+[h(i),h(i)]+[0]
#plt.plot(Xv2 , Yv4, label="Rieman Pm")

q=0

SumaPuntom=0
for i in Xv4:
  q=h(i)*Length
  SumaPuntom= SumaPuntom + q
print("suma Punto Medio es Igual a :")
print(SumaPuntom)
 




#--------------------------------------------------------------------------Comienza Regla de los trapecios------------------------------------------------------
Yv5=[]
a=0    
b=[]  
c=0                   
for i in Yp:
  c=c+1
  if c!=P+2:

    if a==0:
      Yv5=Yv5+[0]+b+[i]
      b=[i] 
      a=1
    else:
      Yv5=Yv5+[0]+b+[i]
      b=[i]
      a=0
c=0
Yv6=[]
for i in Yv5:
  c=c+1
  if c>2:
   
    Yv6=Yv6+[i]
c=0
Yv6=Yv6+[0]
plt.plot(Xv2 , Yv6, label="Trapecios")
 

#--------------------------------------------------------------------------Comienza simpson------------------------------------------------------
a=0
Xv7=[]
f=0
g=0
l=0
d=0

for i in Partition:
  c=c+1
  if c==1:
    Xv7=Xv7+[i]
  if c>1 and c< P+1:
    Xv7=Xv7+[i,i]
  if c== P+1:
    Xv7=Xv7+[i]
c=0
for i in Xv7:
  if c==0:
    a=i
    c=1
    print("c=1")
  elif c==1:
    print("c=2")
    b=i
    c=2
  elif c==2:
    print("c=3")
    f=np.array([[(a*a),a,1],[(b*b),b,1],[(i*i),i,1]])
    g=np.array([h(a),h(b),h(i)])
    print(f)
    print(g)
    l=np.linalg.solve(f,g)

    c=0
    for i in l:
      if d==1:
        a=i
        d=2
      elif d==2:
        b=i
        d=3
      elif d==3:

        def o(x):

          return (x*x*a) + (x*b) + i
          d=0
          x= np.linspace(A,B,100)
          ptl.plot((x,o(x)))
       
  

  


#----------------------------------------------------------------------Configuración de grafica------------------------------------------------------------------
H=1.5
L=1
Eje=[A-L,B+L,-H,H]
x= np.linspace(A,B,100)
plt.plot(x , h(x),label="Función")
plt.legend(loc=3)
plt.plot([-50000,5000],[0,0],"k")
plt.plot([0,0],[-50000,5000],"k")
plt.plot([A,B], [0,0],"ro")
plt.text(A-0.08,-0.13,"A")
plt.text(B-0.08,-0.13,"B")
plt.plot([B,B],[0,h(B)],"r--")
plt.plot([A,A],[0,h(A)],"r--")
plt.axis(Eje)
plt.show()
